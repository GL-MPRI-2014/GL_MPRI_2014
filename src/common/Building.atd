
type name_v = string
  <ocaml validator="Utils.check_validity (
    fun s -> s <> \"\"
  )">
type positive = int
  <ocaml validator="Utils.check_validity (
    fun x -> 0 <= x
  )">

type t = {
  name : name_v;
  product : name_v list;
  income : int;
} 

type t_list = t list

type t_valid_list = { list : t_list}
  <ocaml validator="Utils.check_validity (
    (* contains at least a general *)
    fun lr -> List.exists (fun t -> t.name = \"base\") lr.list
  )">
